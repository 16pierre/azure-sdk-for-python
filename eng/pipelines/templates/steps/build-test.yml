parameters:
  AdditionalTestArgs: ''
  TestMarkArgument: ''
  EnvVars: {}
  ServiceDirectory: ''
  PythonVersion: ''
  OSName: ''
  BeforeTestSteps: []
  PostTestSteps: []
  CoverageArg: ''
  BuildTargetingString: 'azure-*'
  ToxTestEnv: ""
  RunCoverage: ne(variables['CoverageArg'], '--disablecov')
  ToxEnvParallel: ''
  InjectedPackages: ''

steps:
  - pwsh: |
      gci -r $(Build.ArtifactStagingDirectory)

  - task: UsePythonVersion@0
    displayName: 'Use Python ${{ parameters.PythonVersion }}'
    inputs:
      versionSpec: '${{ parameters.PythonVersion }}'

  - template: eng/pipelines/templates/scripts/verify-agent-os.yml@azure-sdk-tools
    parameters:
      OSName: ${{ parameters.OSName }}

  - script: |
      pip install -r eng/ci_tools.txt
    displayName: 'Prep Environment'
    
  - ${{ parameters.BeforeTestSteps }}

  - pwsh: |
      Write-Host '$(azure-sdk-core-dump-container)'
      Write-Host '$(azuresdkartifacts-access-key)'
      Write-Host '$(azure-sdk-artifact-account-name)'
    displayName: 'Upload Found Core Dumps'
    condition: succeededOrFailed()

  - script: |
      sudo chmod 1777 /cores

      defaults write com.apple.finder AppleShowAllFiles TRUE

      ulimit -c unlimited

      python ./scripts/devops_tasks/setup_execute_tests.py "${{ parameters.BuildTargetingString }}" ${{ parameters.AdditionalTestArgs }} ${{ parameters.CoverageArg }} --mark_arg="${{ parameters.TestMarkArgument }}" --service="${{ parameters.ServiceDirectory }}" --toxenv="${{ parameters.ToxTestEnv }}" --injected-packages="${{ parameters.InjectedPackages }}" ${{ parameters.ToxEnvParallel }}
    displayName: 'Run Tests'
    env: ${{ parameters.EnvVars }}

  # - task: PythonScript@0
  #   displayName: 'Run Tests'
  #   inputs:
  #     scriptPath: 'scripts/devops_tasks/setup_execute_tests.py'
  #     arguments: >-
  #       "${{ parameters.BuildTargetingString }}" 
  #       ${{ parameters.AdditionalTestArgs }} 
  #       ${{ parameters.CoverageArg }} 
  #       --mark_arg="${{ parameters.TestMarkArgument }}" 
  #       --service="${{ parameters.ServiceDirectory }}" 
  #       --toxenv="${{ parameters.ToxTestEnv }}"
  #       --injected-packages="${{ parameters.InjectedPackages }}"
  #       ${{ parameters.ToxEnvParallel }}
  #   env: ${{ parameters.EnvVars }}

  - pwsh: |
      az --version
      $env:AZURE_STORAGE_ACCOUNT = '$(azure-sdk-artifact-account-name)'
      $env:AZURE_STORAGE_KEY = '$(azuresdkartifacts-access-key)'
      az storage blob upload-batch -d '$(azure-sdk-core-dump-container)' -s /cores  --timeout 600
    displayName: 'Upload Found Core Dumps'
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    condition: always()
    inputs:
      testResultsFiles: '**/*test*.xml'
      testRunTitle: '${{ parameters.OSName }} Python ${{ parameters.PythonVersion }}'
  
  - template: publish-coverage.yml
    parameters: 
      RunCoverage: ${{ parameters.RunCoverage }}